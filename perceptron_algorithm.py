# -*- coding: utf-8 -*-
"""Perceptron-Algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hIcbhTCUSL-GcsJy0DIxX6J5BllXbnFe
"""

import numpy as np
from matplotlib import pyplot as plt
import numpy as np
import random

def train(x, yy, target, w, accuracy, iteration):
    eta = 0.09

    for i in range(iteration):
        false = 0
        for j in range(len(text)):
            y = w[0] * x[j] + w[1] * yy[j] + w[2]
            error = target[j] - predict(y)
            if float(target[j]) != float(predict(y)):
                false += 1
            w[2] = w[2] + (eta * error)
            w[1] = w[1] + (eta * error * yy[j])
            w[0] = w[0] + (eta * error * x[j])
        accuracy.append(false)

def predict(y):
    if y > 0:
        return 1.0
    else:
        return 0.0

text = []
with open("data.txt") as file:
    for line in file:
        text.append([float(n) for n in line.split(',')])

iteration = 5000
accuracy = []
w = [0.1, 0.2, 0.3]
target = []
x = []
yy = []
xb = []
xr = []
yb = []
yr = []
for i in range(len(text)):
    x.append(text[i][0])
    yy.append(text[i][1])
    target.append(text[i][2])

train(x, yy, target, w, accuracy, iteration)

for i in range(len(text)):
    if target[i] == 1.0:
        xb.append(x[i])
        yb.append(yy[i])
    else:
        xr.append(x[i])
        yr.append(yy[i])

w1 = w[0]
w2 = w[1]
b = w[2]
a = -w1 / w2
c = -b / w2
plt.scatter(xb, yb, c='blue', alpha=0.8)
plt.scatter(xr, yr, c='red', alpha=0.8)
x = np.arange(-200, -50)
plt.plot(x, a * x + c)

plt.show()

x = np.arange(0, 5000)
x_acc = []
y_acc = []
for i in range(iteration):
    x_acc.append(x[i])
    y_acc.append(accuracy[i] / 200 * 100)
plt.plot(x_acc, y_acc)

plt.show()